# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Checkengine\DashboardBundle\Entity\Usuario:
          algorithm: sha512
          encode-as-base64: true
          iterations: 10

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_CLIENTE:     ROLE_USUARIO
        ROLE_ADMIN:       ROLE_CLIENTE
        ROLE_SUPER_ADMIN: [ROLE_USUARIO, ROLE_CLIENTE, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        user_db:
            entity: { class: Checkengine\DashboardBundle\Entity\Usuario, property: email }

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        frontend:
            pattern:  ^/
            provider: user_db
            form_login:
                login_path: login
                check_path: login_check
                success_handler: checkengine.security.authentication.handler
                failure_handler: checkengine.security.authentication.handler
                remember_me: true
                use_referer: false
            logout:
                path: logout
                target: login
            remember_me:
                key: "%secret%"
                lifetime: 31536000
                path: /.*
                domain: ~
                always_remember_me: true
            security: true
            anonymous: true

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/book/security.html#security-book-access-control-matching-options
    access_control:
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/registro, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/recuperar, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: [ROLE_CLIENTE] }